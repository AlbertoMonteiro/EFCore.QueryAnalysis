// <auto-generated />
using EFCore.QueryAnalysis.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace EFCore.QueryAnalysis.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20170914032051_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCore.QueryAnalysis.Entities.Autor", b =>
                {
                    b.Property<int>("ID");

                    b.Property<DateTime?>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Autor");
                });

            modelBuilder.Entity("EFCore.QueryAnalysis.Entities.Biblioteca", b =>
                {
                    b.Property<int>("ID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(50)");

                    b.HasKey("ID");

                    b.ToTable("Biblioteca");
                });

            modelBuilder.Entity("EFCore.QueryAnalysis.Entities.Categoria", b =>
                {
                    b.Property<int>("ID");

                    b.Property<int>("BibliotecaID");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("BibliotecaID");

                    b.ToTable("Categoria");
                });

            modelBuilder.Entity("EFCore.QueryAnalysis.Entities.Livro", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AnoPublicacao");

                    b.Property<int>("AutorID");

                    b.Property<int>("CategoriaID");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.HasKey("ID");

                    b.HasIndex("AutorID");

                    b.HasIndex("CategoriaID");

                    b.ToTable("Livro");
                });

            modelBuilder.Entity("EFCore.QueryAnalysis.Entities.Categoria", b =>
                {
                    b.HasOne("EFCore.QueryAnalysis.Entities.Biblioteca", "Biblioteca")
                        .WithMany("Categorias")
                        .HasForeignKey("BibliotecaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("EFCore.QueryAnalysis.Entities.Livro", b =>
                {
                    b.HasOne("EFCore.QueryAnalysis.Entities.Autor", "Autor")
                        .WithMany("Livros")
                        .HasForeignKey("AutorID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("EFCore.QueryAnalysis.Entities.Categoria", "Categoria")
                        .WithMany("Livros")
                        .HasForeignKey("CategoriaID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
